@echo off
chcp 65001 >nul
REM ========================================================================
REM  LLama-CPP-Python Installation Script for Windows
REM  ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Windows (‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô)
REM ========================================================================

title LLama-CPP-Python Installation Wizard

echo.
echo üöÄ LLama-CPP-Python Installation Wizard for Windows
echo ====================================================
echo.
echo üìã ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ‡∏û‡∏£‡πâ‡∏≠‡∏° GPU support
echo    ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
echo.

REM ==================== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Prerequisites ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1/8] ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Prerequisites...
echo -----------------------------------------------

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô project directory
if not exist "rag_chatbot.py" (
    echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå rag_chatbot.py
    echo    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ cd ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô LLM-RAG project directory ‡∏Å‡πà‡∏≠‡∏ô
    echo    ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: cd "C:\path\to\LLM-RAG"
    echo.
    pause
    exit /b 1
)

echo ‚úÖ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô LLM-RAG project directory ‡πÅ‡∏•‡πâ‡∏ß

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Administrator
net session >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è WARNING: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Administrator
    echo    ‡∏ö‡∏≤‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Admin
    echo    ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ "Run as Administrator"
    echo.
    set /p continue="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
    if /i not "%continue%"=="y" exit /b 0
) else (
    echo ‚úÖ ‡∏£‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Administrator
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python
echo üêç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python...
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö Python
    echo    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python 3.8+ ‡∏à‡∏≤‡∏Å https://python.org
    echo    ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Add Python to PATH"
    echo.
    set /p install_python="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î Python download page ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
    if /i "%install_python%"=="y" start https://python.org/downloads/
    pause
    exit /b 1
) else (
    for /f "tokens=2" %%v in ('python --version 2^>^&1') do (
        echo ‚úÖ Python %%v
        set PYTHON_VERSION=%%v
    )
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö pip
echo üì¶ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö pip...
pip --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö pip
    echo    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á pip ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ python -m pip ‡πÅ‡∏ó‡∏ô
    pause
    exit /b 1
) else (
    for /f "tokens=2" %%v in ('pip --version 2^>^&1') do echo ‚úÖ pip %%v
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Git
echo üìÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Git...
git --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö Git
    echo    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git for Windows ‡∏à‡∏≤‡∏Å https://git-scm.com
    echo.
    set /p install_git="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î Git download page ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
    if /i "%install_git%"=="y" start https://git-scm.com/download/win
    pause
    exit /b 1
) else (
    for /f "tokens=3" %%v in ('git --version 2^>^&1') do echo ‚úÖ Git %%v
)

REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö NVIDIA GPU
echo üéÆ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö NVIDIA GPU...
nvidia-smi >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è WARNING: ‡πÑ‡∏°‡πà‡∏û‡∏ö NVIDIA GPU ‡∏´‡∏£‡∏∑‡∏≠ driver
    echo    ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö CPU-only (‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤ GPU)
    set GPU_SUPPORT=false
    set GPU_INFO=CPU-only
) else (
    echo ‚úÖ ‡∏û‡∏ö NVIDIA GPU
    for /f "tokens=*" %%a in ('nvidia-smi --query-gpu^=name --format^=csv^,noheader^,nounits 2^>nul') do set GPU_NAME=%%a
    for /f "tokens=*" %%a in ('nvidia-smi --query-gpu^=driver_version --format^=csv^,noheader^,nounits 2^>nul') do set DRIVER_VERSION=%%a
    echo    GPU: !GPU_NAME!
    echo    Driver: !DRIVER_VERSION!
    set GPU_SUPPORT=true
    set GPU_INFO=!GPU_NAME!
)

echo.
echo üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏∞‡∏ö‡∏ö:
echo    - Python: %PYTHON_VERSION%
echo    - GPU: %GPU_INFO%
echo    - OS: Windows
echo.

REM ==================== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Virtual Environment ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2/8] ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python Virtual Environment...
echo -----------------------------------------------------------

if not exist "llm_rag_env" (
    echo üì¶ ‡∏™‡∏£‡πâ‡∏≤‡∏á Python virtual environment...
    python -m venv llm_rag_env
    if errorlevel 1 (
        echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á virtual environment ‡πÑ‡∏î‡πâ
        echo    ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:
        echo    1. Python ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        echo    2. ‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà disk ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠
        echo    3. ‡πÑ‡∏°‡πà‡∏°‡∏µ antivirus block
        pause
        exit /b 1
    )
    echo ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á virtual environment ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
) else (
    echo ‚úÖ ‡∏û‡∏ö virtual environment ‡πÅ‡∏•‡πâ‡∏ß
)

echo üîÑ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô virtual environment...
call llm_rag_env\Scripts\activate.bat
if errorlevel 1 (
    echo ‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô virtual environment ‡πÑ‡∏î‡πâ
    pause
    exit /b 1
)

echo ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô virtual environment ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

REM ==================== ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3/8] ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ‡πÅ‡∏•‡∏∞ setuptools...
echo ------------------------------------------------

echo üì¶ ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip...
python -m pip install --upgrade pip
if errorlevel 1 (
    echo ‚ö†Ô∏è WARNING: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
) else (
    echo ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î pip ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
)

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á build tools ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô...
pip install wheel setuptools cmake
if errorlevel 1 (
    echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á build tools ‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
) else (
    echo ‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á build tools ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
)

REM ==================== ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Visual Studio Build Tools ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4/8] ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Visual Studio Build Tools...
echo --------------------------------------------------------

echo üîß ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö C++ compiler...
where cl >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è WARNING: ‡πÑ‡∏°‡πà‡∏û‡∏ö Visual Studio C++ compiler
    
    REM ‡∏•‡∏≠‡∏á‡∏´‡∏≤ VS installation ‡πÉ‡∏ô location ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
    set VS_FOUND=false
    if exist "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat" (
        set VS_PATH=C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat
        set VS_FOUND=true
        set VS_VERSION=Community 2022
    ) else if exist "C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Auxiliary\Build\vcvars64.bat" (
        set VS_PATH=C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Auxiliary\Build\vcvars64.bat
        set VS_FOUND=true
        set VS_VERSION=Professional 2022
    ) else if exist "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat" (
        set VS_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat
        set VS_FOUND=true
        set VS_VERSION=BuildTools 2022
    ) else if exist "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat" (
        set VS_PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat
        set VS_FOUND=true
        set VS_VERSION=BuildTools 2019
    )
    
    if "!VS_FOUND!"=="true" (
        echo üîß ‡∏û‡∏ö Visual Studio !VS_VERSION!
        echo    ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î build environment...
        call "!VS_PATH!" >nul 2>&1
        
        REM ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á load environment
        where cl >nul 2>&1
        if not errorlevel 1 (
            echo ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Visual Studio environment ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            set HAS_COMPILER=true
        ) else (
            echo ‚ùå ‡πÇ‡∏´‡∏•‡∏î Visual Studio environment ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            set HAS_COMPILER=false
        )
    ) else (
        echo ‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Visual Studio Build Tools
        set HAS_COMPILER=false
    )
    
    if "!HAS_COMPILER!"=="false" (
        echo.
        echo üí° ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Visual Studio Build Tools ‡πÄ‡∏û‡∏∑‡πà‡∏≠ compile C++ code
        echo    ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡∏à‡∏∞‡πÉ‡∏ä‡πâ pre-compiled wheel (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ GPU support)
        echo.
        echo üìã ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
        echo    1. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Visual Studio Community (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
        echo    2. ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Visual Studio Build Tools
        echo    3. ‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ pre-compiled wheel
        echo.
        set /p vs_choice="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (1/2/3): "
        
        if "!vs_choice!"=="1" (
            echo üîΩ ‡πÄ‡∏õ‡∏¥‡∏î Visual Studio Community download page...
            start https://visualstudio.microsoft.com/vs/community/
            echo üìã ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
            echo    - Desktop development with C++
            echo    - MSVC v143 - VS 2022 C++ x64/x86 build tools
            echo    - Windows 10/11 SDK
            echo.
            echo ‚è∞ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            pause
            exit /b 0
        ) else if "!vs_choice!"=="2" (
            echo üîΩ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Visual Studio Build Tools...
            winget install Microsoft.VisualStudio.2022.BuildTools
            echo ‚è∞ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            pause
            exit /b 0
        ) else (
            echo üíª ‡∏à‡∏∞‡πÉ‡∏ä‡πâ pre-compiled wheel ‡πÅ‡∏ó‡∏ô
            set USE_PRECOMPILED=true
        )
    )
) else (
    echo ‚úÖ ‡∏û‡∏ö Visual Studio C++ compiler ‡πÅ‡∏•‡πâ‡∏ß
    for /f "tokens=*" %%a in ('cl 2^>^&1 ^| findstr "Version"') do echo    %%a
    set HAS_COMPILER=true
    set USE_PRECOMPILED=false
)

REM ==================== ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5/8] ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch...
echo --------------------------------------

echo üî• ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö PyTorch...
python -c "import torch; print('PyTorch version:', torch.__version__)" >nul 2>&1
if not errorlevel 1 (
    echo ‚úÖ PyTorch ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß
    for /f "tokens=*" %%a in ('python -c "import torch; print(torch.__version__)" 2^>nul') do echo    Version: %%a
) else (
    echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch...
    if "%GPU_SUPPORT%"=="true" (
        echo    ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch ‡∏û‡∏£‡πâ‡∏≠‡∏° CUDA support...
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
    ) else (
        echo    ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch CPU-only...
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
    )
    
    if errorlevel 1 (
        echo ‚ùå ERROR: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        echo    ‡∏•‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ö‡∏ö default...
        pip install torch torchvision torchaudio
        if errorlevel 1 (
            echo ‚ùå ERROR: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            pause
            exit /b 1
        )
    )
    echo ‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á PyTorch ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
)

REM ==================== ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6/8] ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python...
echo -----------------------------------------------

echo ü¶ô ‡∏•‡∏ö llama-cpp-python ‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)...
pip uninstall llama-cpp-python -y >nul 2>&1

if "%USE_PRECOMPILED%"=="true" (
    echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å pre-compiled wheel...
    
    if "%GPU_SUPPORT%"=="true" (
        echo    ‡∏•‡∏≠‡∏á CUDA wheel ‡∏Å‡πà‡∏≠‡∏ô...
        pip install llama-cpp-python --index-url https://abetlen.github.io/llama-cpp-python/whl/cu121
        if errorlevel 1 (
            echo    CUDA wheel ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏•‡∏≠‡∏á CPU wheel...
            pip install llama-cpp-python --index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
        )
    ) else (
        echo    ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á CPU wheel...
        pip install llama-cpp-python --index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
    )
) else (
    echo üî® Compile ‡∏à‡∏≤‡∏Å source code...
    
    if "%GPU_SUPPORT%"=="true" (
        echo    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CUDA...
        set CMAKE_ARGS=-DLLAMA_CUBLAS=on
        set FORCE_CMAKE=1
        echo    CMAKE_ARGS: %CMAKE_ARGS%
    ) else (
        echo    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ environment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CPU...
        set CMAKE_ARGS=-DLLAMA_CUBLAS=off
    )
    
    echo    ‡∏Å‡∏≥‡∏•‡∏±‡∏á compile... (‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤ 5-15 ‡∏ô‡∏≤‡∏ó‡∏µ)
    echo    ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏Å‡πÉ‡∏à‡∏ñ‡πâ‡∏≤‡∏°‡∏µ warning
    echo.
    pip install llama-cpp-python==0.2.90 --no-cache-dir --force-reinstall --verbose
)

if errorlevel 1 (
    echo ‚ùå ERROR: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    echo.
    echo üí° ‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
    echo    1. ‡∏•‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á CPU-only version
    echo    2. ‡πÉ‡∏ä‡πâ alternative LLM library (transformers)
    echo    3. ‡πÉ‡∏ä‡πâ online API (OpenAI, Anthropic)
    echo.
    set /p fallback="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏≠‡∏á CPU-only version ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
    if /i "%fallback%"=="y" (
        echo üíª ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á CPU-only version...
        pip install llama-cpp-python --index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
        if errorlevel 1 (
            echo ‚ùå ERROR: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á CPU version ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            echo    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏î‡∏π troubleshooting guide ‡πÉ‡∏ô LLAMA_CPP_PYTHON_TROUBLESHOOTING.md
            pause
            exit /b 1
        )
        set GPU_SUPPORT=false
    ) else (
        echo ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ‡πÑ‡∏î‡πâ
        pause
        exit /b 1
    )
)

echo ‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á llama-cpp-python ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

REM ==================== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö llama-cpp-python ====================

echo üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö llama-cpp-python...
python -c "from llama_cpp import Llama; print('‚úÖ llama-cpp-python ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ!')" 2>nul
if errorlevel 1 (
    echo ‚ùå WARNING: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö import ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
    echo    ‡∏•‡∏≠‡∏á‡∏î‡∏π error message:
    python -c "from llama_cpp import Llama"
    echo.
    echo üí° ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    set /p continue_anyway="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
    if /i not "%continue_anyway%"=="y" (
        pause
        exit /b 1
    )
) else (
    echo ‚úÖ llama-cpp-python ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏Å‡∏ï‡∏¥
)

REM ==================== ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Dependencies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 7/8] ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Dependencies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ...
echo ------------------------------------------------

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á core packages...
pip install streamlit==1.29.0
if errorlevel 1 echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á streamlit ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á langchain packages...
pip install langchain==0.1.20 langchain-community==0.0.38
if errorlevel 1 echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á langchain ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á vector store packages...
pip install faiss-cpu==1.7.4 sentence-transformers==2.2.2
if errorlevel 1 echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á vector packages ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á document processing packages...
pip install pypdf==3.17.4 python-docx==1.1.0 tiktoken==0.5.2
if errorlevel 1 echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á document packages ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

echo üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á utility packages...
pip install requests==2.31.0 beautifulsoup4==4.12.2 lxml==4.9.3 Pillow==10.1.0 python-dotenv==1.0.0
if errorlevel 1 echo ‚ö†Ô∏è WARNING: ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á utility packages ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

echo ‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô

REM ==================== Final Testing ====================

echo üîç [‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 8/8] ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö...
echo --------------------------------

echo üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö imports...
python -c "
try:
    import streamlit as st
    print('‚úÖ streamlit: OK')
except: print('‚ùå streamlit: ERROR')

try:
    from langchain_community.llms import LlamaCpp
    print('‚úÖ langchain: OK')
except: print('‚ùå langchain: ERROR')

try:
    from langchain_community.vectorstores import FAISS
    print('‚úÖ faiss: OK')
except: print('‚ùå faiss: ERROR')

try:
    from sentence_transformers import SentenceTransformer
    print('‚úÖ sentence-transformers: OK')
except: print('‚ùå sentence-transformers: ERROR')

try:
    from llama_cpp import Llama
    print('‚úÖ llama-cpp-python: OK')
except Exception as e: print(f'‚ùå llama-cpp-python: {e}')
"

if "%GPU_SUPPORT%"=="true" (
    echo üéÆ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö CUDA...
    python -c "
import torch
print(f'CUDA available: {torch.cuda.is_available()}')
if torch.cuda.is_available():
    print(f'CUDA device: {torch.cuda.get_device_name(0)}')
    print(f'CUDA memory: {torch.cuda.get_device_properties(0).total_memory // 1024**3} GB')
"
)

REM ==================== ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• ====================

echo.
echo üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!
echo ==================
echo.
echo üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏∞‡∏ö‡∏ö:
echo    - Python: %PYTHON_VERSION%
if "%GPU_SUPPORT%"=="true" (
    echo    - GPU Support: ‚úÖ Enabled ^(!GPU_NAME!^)
    echo    - Expected Speed: 3000-4000+ tokens/sec
) else (
    echo    - GPU Support: ‚ùå CPU-only
    echo    - Expected Speed: 2000-2500 tokens/sec
)
echo    - LLM Model Path: C:\AI\llm\Llama-3.2-3B-Instruct-GGUF\
echo    - Embedding Path: C:\AI\embedding-models\all-MiniLM-L6-v2
echo.
echo üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:
echo    1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ LLM model ‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà C:\AI\llm\ (‡∏£‡∏±‡∏ô download_models_windows.bat)
echo    2. ‡∏£‡∏±‡∏ô application: streamlit run rag_chatbot.py
echo    3. ‡πÄ‡∏õ‡∏¥‡∏î browser ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: http://localhost:8501
echo    4. ‡∏Å‡∏î "Create chatbot" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
echo    5. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô RAG chatbot!
echo.
echo üîß Troubleshooting:
echo    - ‡∏´‡∏≤‡∏Å import error: ‡∏î‡∏π LLAMA_CPP_PYTHON_TROUBLESHOOTING.md
echo    - ‡∏´‡∏≤‡∏Å GPU ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CUDA driver ‡πÅ‡∏•‡∏∞ log message
echo    - ‡∏´‡∏≤‡∏Å ‡∏ä‡πâ‡∏≤: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ GPU ‡∏´‡∏£‡∏∑‡∏≠ CPU (‡∏î‡∏π log "assigned to device CUDA0")
echo.

set /p run_app="‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô application ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (y/n): "
if /i "%run_app%"=="y" (
    echo üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô application...
    streamlit run rag_chatbot.py
) else (
    echo üìù ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
    echo    streamlit run rag_chatbot.py
)

pause
